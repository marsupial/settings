{
	"scope": "meta.function.osl",

	"completions":
	[
		{ "trigger": "step()\tfloat edge, float x", "contents": "step(${1:edge}, ${2:x})" },
		{ "trigger": "step()\ttype edge, type x", "contents": "step(${1:edge}, ${2:x})" },
		{ "trigger": "smoothstep()\tedge0, edge1, x", "contents": "smoothstep(${1:edge0}, ${2:edge1}, ${3:x})" },

		{ "trigger": "cellnoise()\tp", "contents": "cellnoise(${1:p})" },
		{ "trigger": "cellnoise()\tp, t", "contents": "cellnoise(${1:p}, ${2:t})" },
		{ "trigger": "cellnoise()\tu", "contents": "cellnoise(${1:u})" },
		{ "trigger": "cellnoise()\tu, v", "contents": "cellnoise(${1:u}, ${2:v})" },
		{ "trigger": "hash()\tp", "contents": "hash(${1:p})" },
		{ "trigger": "hash()\tp, t", "contents": "hash(${1:p}, ${2:t})" },
		{ "trigger": "hash()\tu", "contents": "hash(${1:u})" },
		{ "trigger": "hash()\tu, v", "contents": "hash(${1:u}, ${2:v})" },
		{ "trigger": "noise()", "contents": "noise($1)" },
		{ "trigger": "noise()\tcell, p", "contents": "noise(\"cell\", ${1:p})" },
		{ "trigger": "noise()\tcell, p, t", "contents": "noise(\"cell\", ${1:p}, ${2:t})" },
		{ "trigger": "noise()\tcell, u", "contents": "noise(\"cell\", ${1:u})" },
		{ "trigger": "noise()\tcell, u, v", "contents": "noise(\"cell\", ${1:u}, ${2:v})" },
		{ "trigger": "noise()\tgabor", "contents": "noise(\"gabor\", $1)" },
		{ "trigger": "noise()\tp", "contents": "noise(${1:p})" },
		{ "trigger": "noise()\tp, t", "contents": "noise(${1:p}, ${2:t})" },
		{ "trigger": "noise()\tperlin, p", "contents": "noise(\"perlin\", ${1:p})" },
		{ "trigger": "noise()\tperlin, p, t", "contents": "noise(\"perlin\", ${1:p}, ${2:t})" },
		{ "trigger": "noise()\tperlin, u", "contents": "noise(\"perlin\", ${1:u})" },
		{ "trigger": "noise()\tperlin, u, v", "contents": "noise(\"perlin\", ${1:u}, ${2:v})" },
		{ "trigger": "noise()\tsnoise, p", "contents": "noise(\"snoise\", ${1:p})" },
		{ "trigger": "noise()\tsnoise, p, t", "contents": "noise(\"snoise\", ${1:p}, ${2:t})" },
		{ "trigger": "noise()\tsnoise, u", "contents": "noise(\"snoise\", ${1:u})" },
		{ "trigger": "noise()\tsnoise, u, v", "contents": "noise(\"snoise\", ${1:u}, ${2:v})" },
		{ "trigger": "noise()\tu", "contents": "noise(${1:u})" },
		{ "trigger": "noise()\tu, v", "contents": "noise(${1:u}, ${2:v})" },
		{ "trigger": "noise()\tuperlin", "contents": "noise($1)" },
		{ "trigger": "pnoise()\tp", "contents": "pnoise(${1:p})" },
		{ "trigger": "pnoise()\tp, t", "contents": "pnoise(${1:p}, ${2:t})" },
		{ "trigger": "pnoise()\ttype, p", "contents": "pnoise(${1:noisetype}, ${2:p})" },
		{ "trigger": "pnoise()\ttype, p, t", "contents": "pnoise(${1:noisetype}, ${2:p}, ${3:t})" },
		{ "trigger": "pnoise()\ttype, u", "contents": "pnoise(${1:noisetype}, ${2:u})" },
		{ "trigger": "pnoise()\ttype, u, v", "contents": "pnoise(${1:noisetype}, ${2:u}, ${3:v})" },
		{ "trigger": "pnoise()\tu", "contents": "pnoise(${1:u})" },
		{ "trigger": "pnoise()\tu, v", "contents": "pnoise(${1:u}, ${2:v})" },
		{ "trigger": "psnoise()\tp", "contents": "psnoise(${1:p})" },
		{ "trigger": "psnoise()\tp, t", "contents": "psnoise(${1:p}, ${2:t})" },
		{ "trigger": "psnoise()\tu", "contents": "psnoise(${1:u})" },
		{ "trigger": "psnoise()\tu, v", "contents": "psnoise(${1:u}, ${2:v})" },
		{ "trigger": "snoise()\tp", "contents": "snoise(${1:p})" },
		{ "trigger": "snoise()\tp, t", "contents": "snoise(${1:p}, ${2:t})" },
		{ "trigger": "snoise()\tu", "contents": "snoise(${1:u})" },
		{ "trigger": "snoise()\tu, v", "contents": "snoise(${1:u}, ${2:v})" },

		{ "trigger": "pnoise()\ttype, u, uperiod", "contents": "pnoise(${1:noisetype}, ${2:u}, ${3:uperiod})" },
		{ "trigger": "pnoise()\ttype, u, v, up, vp", "contents": "pnoise(${1:noisetype}, ${2:u}, ${3:v}, ${4:uperiod}, ${5:vperiod})" },
		{ "trigger": "pnoise()\ttype, p, pperiod", "contents": "pnoise(${1:noisetype}, ${2:u}, ${3:uperiod})" },
		{ "trigger": "pnoise()\ttype, u, v, up, vp", "contents": "pnoise(${1:noisetype}, ${2:u}, ${3:v}, ${4:uperiod}, ${5:vperiod})" },

		{ "trigger": "random()", "contents": "random($1)"},

		{ "trigger": "spline()\tbasis, x, y[]", "contents": "spline(${1:basis}, ${2:x}, ${3:y[]})"},
		{ "trigger": "spline()\tbasis, x, nk, y[]", "contents": "spline(${1:basis}, ${2:x}, ${3:nknots}, ${4:y[]})"},
		{ "trigger": "spline()", "contents": "spline($1)"},

		{ "trigger": "splineinverse()\tbasis, x, y[]", "contents": "splineinverse(${1:basis}, ${2:x}, ${3:y[]})"},
		{ "trigger": "splineinverse()\tbasis, x, nk, y[]", "contents": "splineinverse(${1:basis}, ${2:x}, ${3:nknots}, ${4:y[]})"},
		{ "trigger": "splineinverse()", "contents": "splineinverse($1)"}
	]
}