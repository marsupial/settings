+--++++====++++----------------------------------------------++++====++++--+

                     Thanks for trying CMakeBuilder!
                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


The CMakeBuilder package is located at

    (Installed) Packages/CMakeBuilder
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This message is the installation message. It can be found at

    (Installed) Packages/CMakeBuilder/messages/install.txt
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This plugin is very simple and can be seen as "glue" between the CMake build
system and Sublime Text's own build system. It gives you a few useful
utility commands so that you don't have to leave Sublime Text, for most of 
the time. To help CMakeBuilder know where your CMake build folder is, you'll
have to have a .sublime-project file with a "cmake" dictionary sitting next 
to "settings", "folders", and so forth.

For the "Instruction Manual", please see:

    https://github.com/rwols/CMakeBuilder
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Or, you can even just go to

    Preferences -> Package Settings -> CMakeBuilder -> README

Extra goodies:
- Goto error/warning at the configuration step (press F4)
- Goto error/warning at the build step (press F4)
- Run your unit tests from within Sublime with CTest
- Diagnose command if you get stuck on what to do
- Syntax highlighting for the CMakeCache.txt file
- Syntax highlighting for the cmake output panel at the configuration step
- Syntax highlighting for both Make- and Ninja-based build systems
- Syntax highlighting for Visual Studio / MSBuild-style outputs

Note that commands are "disabled" when they feel that they cannot be run.
For example, if there is no CMakeLists.txt file in your project folder, the
command "CMakeBuilder: Configure" will not show up in the command palette.
The command "CMakeBuilder: Diagnose" can always be run and you can use that
as a hint as to what is wrong.

This plugin is not a replacement for "serious" build users. In a real build,
you probably want to create shared and static versions of your library, and
debug and release versions. Perhaps 32 bit and 64 bit too. That's what the
command line is for. This plugin is for the developer working on a CMake 
project and wanting to quickly build/test the project.

This plugin does not provide syntax highlighting for CMakeLists.txt files 
and .cmake files, nor does it provide highlighting for ".in" files suitable
for "configure_file" commands from CMake; download the "CMake" package to
that end.
+--++++====++++----------------------------------------------++++====++++--+
